@model RegisterModel
@using Nop.Web.Models.Customer;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Register").Text);
    //page class
    Html.AppendPageCssClassParts("html-registration-page");
}
@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#@Html.FieldIdFor(model => model.CountryId)").change(function () {
                var selectedItem = $(this).val();
                var ddlStates = $("#@Html.FieldIdFor(model => model.StateProvinceId)");
                var statesProgress = $("#states-loading-progress");
                statesProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                    data: { "countryId": selectedItem, "addSelectStateItem": "true" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        statesProgress.hide();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        statesProgress.hide();
                    }
                });
            });
        });
    </script>
}
@using (Html.BeginForm("Register", "CRM"))
{
    @Html.AntiForgeryToken()
    <div class="page registration-page">
        <div class="page-title">
            <h1>@T("Account.Register")</h1>
        </div>
        <div class="page-body">
            @{
                var validationSummary = Html.ValidationSummary(true);
            }

            @Html.Partial("_ExternalAuthentication.AssociateMessage")
            <div class="fieldset">
                <div class="title">
                    <strong>@T("Account.YourPersonalDetails")</strong>
                </div>
                <div class="form-fields">

                    <div class="inputs">
                        @Html.LabelFor(model => model.FirstName, new { }, ":")
                        @Html.EditorFor(model => model.FirstName, new { @name = "firstname" })
                        @Html.RequiredHint()
                        @Html.ValidationMessageFor(model => model.FirstName)
                    </div>
                    <div class="inputs">
                        @Html.LabelFor(model => model.LastName, new { }, ":")
                        @Html.EditorFor(model => model.LastName, new { @name = "lastname" })
                        @Html.RequiredHint()
                        @Html.ValidationMessageFor(model => model.LastName)
                    </div>

                    <div class="inputs">
                        @Html.LabelFor(model => model.Phone, new { }, ":")
                        <input type="text" name="telephone1" id="telephone1" />
                        @*@Html.EditorFor(model => model.Phone, new { @name = "telephone1" })*@
                        @Html.RequiredHint()
                        @Html.ValidationMessageFor(model => model.Phone)
                    </div>

                    <div class="inputs">
                        @Html.LabelFor(model => model.Email, new { }, ":")
                        <input type="text" name="emailaddress1" id="emailaddress1" />

                   @*     @Html.EditorFor(model => model.Email, new { @name = "emailaddress1" })*@
                        @Html.RequiredHint()
                        @Html.ValidationMessageFor(model => model.Email)
                    </div>

                    <div class="buttons">
                        <input type="submit" id="register-button" class="button-1 register-next-step-button" value="@T("Account.Register.Button")" name="register-button" />
                    </div>
                    <div class="external-authentication">
                        @Html.Action("ExternalMethods", "ExternalAuthentication")
                    </div>
                </div>
            </div>
        </div>
    </div>
}
